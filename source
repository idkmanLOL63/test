local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
   Name = "UniAimbot",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "idk",
   LoadingSubtitle = "by RandomGuylol86",
   Theme = "Bloom", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local dhlock = loadstring(game:HttpGet("https://raw.githubusercontent.com/Stratxgy/DH-Lua-Lock/refs/heads/main/Main.lua"))()

-- Aimbot Tab
local aimbotTab = Window:CreateTab("aimbot", "crosshair") -- Title, Image

local Section = aimbotTab:CreateSection("Aimbot Settings")

local Toggle = aimbotTab:CreateToggle({
   Name = "Aimbot (right mouse to enable)",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
      getgenv().dhlock.enabled = Value and "enabled" or "disabled"
   end,
})

local Toggle = aimbotTab:CreateToggle({
   Name = "Fov",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
      getgenv().dhlock.showfov = Value
   end,
})

local Slider = aimbotTab:CreateSlider({
   Name = "Aimbot FOV",
   Range = {0, 500},
   Increment = 10,
   Suffix = "FOV",
   CurrentValue = 50,
   Flag = "Slider1",
   Callback = function(Value)
      getgenv().dhlock.fov = Value
   end,
})

local Keybind = aimbotTab:CreateKeybind({
   Name = "AimKey(soon)",
   CurrentKeybind = "MB2",
   HoldToInteract = false,
   Flag = "Keybind1",
   Callback = function(Keybind)
      getgenv().dhlock.keybind = Keybind
   end,
})

-- Visuals Tab
local visualsTab = Window:CreateTab("Visuals", "eye") -- Title, Image

-- Create a section within the "Visuals" tab for ESP settings
local visualsSection = visualsTab:CreateSection("ESP Settings")

-- Toggle for enabling/disabling ESP (Highlight all players)
local espToggle = visualsTab:CreateToggle({
    Name = "ESP (Highlight all players)",
    CurrentValue = false,
    Flag = "espToggle",
    Callback = function(Value)
        getgenv().espEnabled = Value  -- Toggle the ESP state
        if Value then
            -- Enable ESP: Draw ESP for all players
            local Player = game:GetService("Players").LocalPlayer
            local Camera = game:GetService("Workspace").CurrentCamera
            local Mouse = Player:GetMouse()

            local function DrawESP(plr)
                local Box = Drawing.new("Quad")
                Box.Visible = false
                Box.PointA = Vector2.new(0, 0)
                Box.PointB = Vector2.new(0, 0)
                Box.PointC = Vector2.new(0, 0)
                Box.PointD = Vector2.new(0, 0)
                Box.Color = Color3.fromRGB(255, 255, 255)
                Box.Thickness = 1
                Box.Transparency = 1

                local function Update()
                    local c
                    c = game:GetService("RunService").RenderStepped:Connect(function()
                        if plr.Character ~= nil and plr.Character:FindFirstChildOfClass("Humanoid") ~= nil and plr.Character.PrimaryPart ~= nil and plr.Character:FindFirstChildOfClass("Humanoid").Health > 0 then
                            local pos, vis = Camera:WorldToViewportPoint(plr.Character.PrimaryPart.Position)
                            if vis then 
                                local points = {}
                                local c = 0
                                for _,v in pairs(plr.Character:GetChildren()) do
                                    if v:IsA("BasePart") then
                                        c = c + 1
                                        local p, vis = Camera:WorldToViewportPoint(v.Position)
                                        if v == plr.Character.PrimaryPart then
                                            p, vis = Camera:WorldToViewportPoint((v.CFrame * CFrame.new(0, 0, -v.Size.Z)).p)
                                        elseif v.Name == "Head" then
                                            p, vis = Camera:WorldToViewportPoint((v.CFrame * CFrame.new(0, v.Size.Y/2, v.Size.Z/1.25)).p)
                                        elseif string.match(v.Name, "Left") then
                                            p, vis = Camera:WorldToViewportPoint((v.CFrame * CFrame.new(-v.Size.X/2, 0, 0)).p)
                                        elseif string.match(v.Name, "Right") then
                                            p, vis = Camera:WorldToViewportPoint((v.CFrame * CFrame.new(v.Size.X/2, 0, 0)).p)
                                        end
                                        points[c] = {p, vis}
                                    end
                                end

                                local TopY = math.huge
                                local DownY = -math.huge
                                local LeftX = math.huge
                                local RightX = -math.huge

                                local Left
                                local Right
                                local Top
                                local Bottom

                                local closest = nil
                                for _,v in pairs(points) do
                                    if v[2] == true then
                                        local p = v[1]
                                        if p.Y < TopY then
                                            Top = p
                                            TopY = p.Y
                                        end
                                        if p.Y > DownY then
                                            Bottom = p
                                            DownY = p.Y
                                        end
                                        if p.X > RightX then
                                            Right = p
                                            RightX = p.X
                                        end
                                        if p.X < LeftX then
                                            Left = p
                                            LeftX = p.X
                                        end
                                    end
                                end

                                if Left ~= nil and Right ~= nil and Top ~= nil and Bottom ~= nil then
                                    Box.PointA = Vector2.new(Right.X, Top.Y)
                                    Box.PointB = Vector2.new(Left.X, Top.Y)
                                    Box.PointC = Vector2.new(Left.X, Bottom.Y)
                                    Box.PointD = Vector2.new(Right.X, Bottom.Y)

                                    Box.Visible = true
                                else 
                                    Box.Visible = false
                                end
                            else 
                                Box.Visible = false
                            end
                        else
                            Box.Visible = false
                            if game.Players:FindFirstChild(plr.Name) == nil then
                                c:Disconnect()
                            end
                        end
                    end)
                end
                coroutine.wrap(Update)()
            end

            -- Draw ESP for all players
            for _,v in pairs(game:GetService("Players"):GetChildren()) do
                if v.Name ~= Player.Name then 
                    DrawESP(v)
                end
            end

            game:GetService("Players").PlayerAdded:Connect(function(v)
                DrawESP(v)
            end)

        else
            -- Disable ESP: Remove all ESP boxes (no longer required as no global cleanup was defined)
            -- You can manually clear all ESP boxes here if needed
        end
    end,
})

-- Toggle for displaying player names above heads
local espNameToggle = visualsTab:CreateToggle({
    Name = "ESP Name (Display player names)",
    CurrentValue = false,
    Flag = "espNameToggle",
    Callback = function(Value)
        getgenv().espNameEnabled = Value  -- Toggle the ESP name state
        if Value then
            -- Enable ESP Name: Display player names above their heads
            for _, player in pairs(game.Players:GetPlayers()) do
                if player.Character and player.Character:FindFirstChild("Head") then
                    local nameTag = Instance.new("BillboardGui")
                    nameTag.Parent = player.Character.Head
                    nameTag.Adornee = player.Character.Head
                    nameTag.Size = UDim2.new(0, 100, 0, 50)  -- Size of the name tag
                    nameTag.StudsOffset = Vector3.new(0, 2, 0)  -- Position above the head

                    local label = Instance.new("TextLabel")
                    label.Parent = nameTag
                    label.Size = UDim2.new(1, 0, 1, 0)
                    label.BackgroundTransparency = 1
                    label.Text = player.Name  -- Player's name
                    label.TextColor3 = Color3.fromRGB(255, 255, 255)  -- White color
                    label.TextStrokeTransparency = 0.5  -- Stroke transparency
                    label.TextSize = 18  -- Text size
                end
            end
        else
            -- Disable ESP Name: Remove name tags
            for _, player in pairs(game.Players:GetPlayers()) do
                if player.Character and player.Character:FindFirstChild("Head") then
                    local nameTag = player.Character.Head:FindFirstChildOfClass("BillboardGui")
                    if nameTag then
                        nameTag:Destroy()  -- Remove name tag
                    end
                end
            end
        end
    end,
})
